GAS LISTING /tmp/ccW5sVml.s 			page 1


   1              		.file	"memoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   8              	_ZL12blocksNeededm:
   9              	.LFB0:
  10              		.file 1 "src/memoryAllocator.cpp"
   1:src/memoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   2:src/memoryAllocator.cpp **** #include "../lib/hw.h"
   3:src/memoryAllocator.cpp **** 
   4:src/memoryAllocator.cpp **** 
   5:src/memoryAllocator.cpp **** FreeMemBlock *MemoryAllocator::head = nullptr;
   6:src/memoryAllocator.cpp **** 
   7:src/memoryAllocator.cpp **** static size_t blocksNeeded(size_t b){
  11              		.loc 1 7 37
  12              		.cfi_startproc
  13              	.LVL0:
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/memoryAllocator.cpp ****     return (b + sizeof(FreeMemBlock) + MEM_BLOCK_SIZE - 1 )/ MEM_BLOCK_SIZE;
  20              		.loc 1 8 5
  21              		.loc 1 8 55 is_stmt 0
  22 000c 1305F504 		addi	a0,a0,79
  23              	.LVL1:
   9:src/memoryAllocator.cpp **** }
  24              		.loc 1 9 1
  25 0010 13556500 		srli	a0,a0,6
  26              	.LVL2:
  27 0014 03348100 		ld	s0,8(sp)
  28              		.cfi_restore 8
  29              		.cfi_def_cfa 2, 16
  30 0018 13010101 		addi	sp,sp,16
  31              		.cfi_def_cfa_offset 0
  32 001c 67800000 		jr	ra
  33              		.cfi_endproc
  34              	.LFE0:
  36              		.align	2
  37              		.globl	_ZN15MemoryAllocator9mem_allocEm
  39              	_ZN15MemoryAllocator9mem_allocEm:
  40              	.LFB1:
  10:src/memoryAllocator.cpp **** 
  11:src/memoryAllocator.cpp **** void* MemoryAllocator::mem_alloc(size_t size) {
  41              		.loc 1 11 47 is_stmt 1
  42              		.cfi_startproc
  43              	.LVL3:
  44 0020 130101FD 		addi	sp,sp,-48
  45              		.cfi_def_cfa_offset 48
  46 0024 23341102 		sd	ra,40(sp)
  47 0028 23308102 		sd	s0,32(sp)
  48 002c 233C9100 		sd	s1,24(sp)
  49 0030 23382101 		sd	s2,16(sp)
GAS LISTING /tmp/ccW5sVml.s 			page 2


  50 0034 23343101 		sd	s3,8(sp)
  51 0038 23304101 		sd	s4,0(sp)
  52              		.cfi_offset 1, -8
  53              		.cfi_offset 8, -16
  54              		.cfi_offset 9, -24
  55              		.cfi_offset 18, -32
  56              		.cfi_offset 19, -40
  57              		.cfi_offset 20, -48
  58 003c 13040103 		addi	s0,sp,48
  59              		.cfi_def_cfa 8, 0
  12:src/memoryAllocator.cpp ****     if(!size)
  60              		.loc 1 12 5
  61 0040 6306050E 		beqz	a0,.L11
  13:src/memoryAllocator.cpp ****         return nullptr;
  14:src/memoryAllocator.cpp **** 
  15:src/memoryAllocator.cpp ****     size_t needed = blocksNeeded(size);
  62              		.loc 1 15 5
  63              		.loc 1 15 33 is_stmt 0
  64 0044 97000000 		call	_ZL12blocksNeededm
  64      E7800000 
  65              	.LVL4:
  66 004c 93090500 		mv	s3,a0
  67              	.LVL5:
  16:src/memoryAllocator.cpp **** 
  17:src/memoryAllocator.cpp ****     FreeMemBlock *curr = head, *prev = nullptr;
  68              		.loc 1 17 5 is_stmt 1
  69              		.loc 1 17 19 is_stmt 0
  70 0050 97040000 		ld	s1,.LANCHOR0
  70      83B40400 
  71              	.LVL6:
  18:src/memoryAllocator.cpp **** 
  19:src/memoryAllocator.cpp ****     if(head == nullptr){
  72              		.loc 1 19 5 is_stmt 1
  73              	.LBB2:
  74 0058 63800402 		beqz	s1,.L13
  75              	.L5:
  76              	.LBE2:
  11:src/memoryAllocator.cpp ****     if(!size)
  77              		.loc 1 11 47 is_stmt 0
  78 005c 130A0000 		li	s4,0
  79              	.LVL7:
  80              	.L10:
  20:src/memoryAllocator.cpp ****         size_t NOBlocks = ((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR) / MEM_BLOCK_SIZE;
  21:src/memoryAllocator.cpp **** 
  22:src/memoryAllocator.cpp ****         if(needed > NOBlocks)
  23:src/memoryAllocator.cpp ****             return nullptr;
  24:src/memoryAllocator.cpp ****         else{
  25:src/memoryAllocator.cpp ****             head = (FreeMemBlock*)HEAP_START_ADDR;
  26:src/memoryAllocator.cpp ****             head->next = nullptr;
  27:src/memoryAllocator.cpp ****             head->size = NOBlocks;
  28:src/memoryAllocator.cpp ****         }
  29:src/memoryAllocator.cpp ****     }
  30:src/memoryAllocator.cpp ****     while(curr){
  81              		.loc 1 30 5 is_stmt 1
  82              		.loc 1 30 11
  83 0060 638C0408 		beqz	s1,.L3
  84              	.LBB4:
GAS LISTING /tmp/ccW5sVml.s 			page 3


  31:src/memoryAllocator.cpp ****         if(curr->size >= needed){
  85              		.loc 1 31 9
  86              	.LBB5:
  87              		.loc 1 31 18 is_stmt 0
  88 0064 83B78400 		ld	a5,8(s1)
  89              		.loc 1 31 9
  90 0068 63F83705 		bgeu	a5,s3,.L14
  91              	.LBE5:
  32:src/memoryAllocator.cpp ****             size_t remaining = curr->size - needed;
  33:src/memoryAllocator.cpp **** 
  34:src/memoryAllocator.cpp ****             if(blocksNeeded(1) <= remaining){
  35:src/memoryAllocator.cpp ****                 FreeMemBlock *newBlock = (FreeMemBlock*)((char*)curr + needed * MEM_BLOCK_SIZE);
  36:src/memoryAllocator.cpp ****                 newBlock->size = remaining;
  37:src/memoryAllocator.cpp ****                 newBlock->next = curr->next;
  38:src/memoryAllocator.cpp **** 
  39:src/memoryAllocator.cpp ****                 curr->size = needed;
  40:src/memoryAllocator.cpp ****                 curr->next = newBlock;
  41:src/memoryAllocator.cpp ****             }
  42:src/memoryAllocator.cpp ****             if(prev)
  43:src/memoryAllocator.cpp ****                 prev->next = curr->next;
  44:src/memoryAllocator.cpp ****             else
  45:src/memoryAllocator.cpp ****                 head = curr->next;
  46:src/memoryAllocator.cpp **** 
  47:src/memoryAllocator.cpp ****             return (char*)curr + sizeof(FreeMemBlock);
  48:src/memoryAllocator.cpp ****         }
  49:src/memoryAllocator.cpp ****         prev = curr;
  92              		.loc 1 49 9 is_stmt 1
  93              	.LVL8:
  50:src/memoryAllocator.cpp ****         curr = curr->next;
  94              		.loc 1 50 9
  49:src/memoryAllocator.cpp ****         curr = curr->next;
  95              		.loc 1 49 14 is_stmt 0
  96 006c 138A0400 		mv	s4,s1
  97              		.loc 1 50 14
  98 0070 83B40400 		ld	s1,0(s1)
  99              	.LVL9:
 100              	.LBE4:
  30:src/memoryAllocator.cpp ****         if(curr->size >= needed){
 101              		.loc 1 30 5
 102 0074 6FF0DFFE 		j	.L10
 103              	.LVL10:
 104              	.L13:
 105              	.LBB12:
 106              	.LBB3:
  20:src/memoryAllocator.cpp **** 
 107              		.loc 1 20 9 is_stmt 1
  20:src/memoryAllocator.cpp **** 
 108              		.loc 1 20 50 is_stmt 0
 109 0078 97070000 		la	a5,HEAP_START_ADDR
 109      83B70700 
 110 0080 03B70700 		ld	a4,0(a5)
 111 0084 97070000 		la	a5,HEAP_END_ADDR
 111      83B70700 
 112 008c 83B70700 		ld	a5,0(a5)
 113 0090 B387E740 		sub	a5,a5,a4
  20:src/memoryAllocator.cpp **** 
 114              		.loc 1 20 16
GAS LISTING /tmp/ccW5sVml.s 			page 4


 115 0094 93D76700 		srli	a5,a5,6
 116              	.LVL11:
  22:src/memoryAllocator.cpp ****             return nullptr;
 117              		.loc 1 22 9 is_stmt 1
 118 0098 63E0A706 		bgtu	a0,a5,.L3
  25:src/memoryAllocator.cpp ****             head->next = nullptr;
 119              		.loc 1 25 13
  25:src/memoryAllocator.cpp ****             head->next = nullptr;
 120              		.loc 1 25 18 is_stmt 0
 121 009c 97060000 		lla	a3,.LANCHOR0
 121      93860600 
 122 00a4 23B0E600 		sd	a4,0(a3)
  26:src/memoryAllocator.cpp ****             head->size = NOBlocks;
 123              		.loc 1 26 13 is_stmt 1
  26:src/memoryAllocator.cpp ****             head->size = NOBlocks;
 124              		.loc 1 26 24 is_stmt 0
 125 00a8 23300700 		sd	zero,0(a4)
  27:src/memoryAllocator.cpp ****         }
 126              		.loc 1 27 13 is_stmt 1
  27:src/memoryAllocator.cpp ****         }
 127              		.loc 1 27 19 is_stmt 0
 128 00ac 03B70600 		ld	a4,0(a3)
  27:src/memoryAllocator.cpp ****         }
 129              		.loc 1 27 24
 130 00b0 2334F700 		sd	a5,8(a4)
 131              	.LBE3:
 132 00b4 6FF09FFA 		j	.L5
 133              	.LVL12:
 134              	.L14:
 135              	.LBE12:
 136              	.LBB13:
 137              	.LBB10:
 138              	.LBB6:
  32:src/memoryAllocator.cpp **** 
 139              		.loc 1 32 13 is_stmt 1
  32:src/memoryAllocator.cpp **** 
 140              		.loc 1 32 20 is_stmt 0
 141 00b8 33893741 		sub	s2,a5,s3
 142              	.LVL13:
  34:src/memoryAllocator.cpp ****                 FreeMemBlock *newBlock = (FreeMemBlock*)((char*)curr + needed * MEM_BLOCK_SIZE);
 143              		.loc 1 34 13 is_stmt 1
 144              	.LBB7:
  34:src/memoryAllocator.cpp ****                 FreeMemBlock *newBlock = (FreeMemBlock*)((char*)curr + needed * MEM_BLOCK_SIZE);
 145              		.loc 1 34 28 is_stmt 0
 146 00bc 13051000 		li	a0,1
 147              	.LVL14:
 148 00c0 97000000 		call	_ZL12blocksNeededm
 148      E7800000 
 149              	.LVL15:
  34:src/memoryAllocator.cpp ****                 FreeMemBlock *newBlock = (FreeMemBlock*)((char*)curr + needed * MEM_BLOCK_SIZE);
 150              		.loc 1 34 13
 151 00c8 6360A902 		bgtu	a0,s2,.L7
 152              	.LBB8:
  35:src/memoryAllocator.cpp ****                 newBlock->size = remaining;
 153              		.loc 1 35 17 is_stmt 1
  35:src/memoryAllocator.cpp ****                 newBlock->size = remaining;
 154              		.loc 1 35 79 is_stmt 0
GAS LISTING /tmp/ccW5sVml.s 			page 5


 155 00cc 93976900 		slli	a5,s3,6
  35:src/memoryAllocator.cpp ****                 newBlock->size = remaining;
 156              		.loc 1 35 31
 157 00d0 B387F400 		add	a5,s1,a5
 158              	.LVL16:
  36:src/memoryAllocator.cpp ****                 newBlock->next = curr->next;
 159              		.loc 1 36 17 is_stmt 1
  36:src/memoryAllocator.cpp ****                 newBlock->next = curr->next;
 160              		.loc 1 36 32 is_stmt 0
 161 00d4 23B42701 		sd	s2,8(a5)
  37:src/memoryAllocator.cpp **** 
 162              		.loc 1 37 17 is_stmt 1
  37:src/memoryAllocator.cpp **** 
 163              		.loc 1 37 40 is_stmt 0
 164 00d8 03B70400 		ld	a4,0(s1)
  37:src/memoryAllocator.cpp **** 
 165              		.loc 1 37 32
 166 00dc 23B0E700 		sd	a4,0(a5)
  39:src/memoryAllocator.cpp ****                 curr->next = newBlock;
 167              		.loc 1 39 17 is_stmt 1
  39:src/memoryAllocator.cpp ****                 curr->next = newBlock;
 168              		.loc 1 39 28 is_stmt 0
 169 00e0 23B43401 		sd	s3,8(s1)
  40:src/memoryAllocator.cpp ****             }
 170              		.loc 1 40 17 is_stmt 1
  40:src/memoryAllocator.cpp ****             }
 171              		.loc 1 40 28 is_stmt 0
 172 00e4 23B0F400 		sd	a5,0(s1)
 173              	.LVL17:
 174              	.L7:
 175              	.LBE8:
 176              	.LBE7:
  42:src/memoryAllocator.cpp ****                 prev->next = curr->next;
 177              		.loc 1 42 13 is_stmt 1
 178 00e8 630A0A02 		beqz	s4,.L8
  43:src/memoryAllocator.cpp ****             else
 179              		.loc 1 43 17
  43:src/memoryAllocator.cpp ****             else
 180              		.loc 1 43 36 is_stmt 0
 181 00ec 83B70400 		ld	a5,0(s1)
  43:src/memoryAllocator.cpp ****             else
 182              		.loc 1 43 28
 183 00f0 2330FA00 		sd	a5,0(s4)
 184              	.L9:
  47:src/memoryAllocator.cpp ****         }
 185              		.loc 1 47 13 is_stmt 1
  47:src/memoryAllocator.cpp ****         }
 186              		.loc 1 47 53 is_stmt 0
 187 00f4 93840401 		addi	s1,s1,16
 188              	.LVL18:
 189              	.L3:
 190              	.LBE6:
 191              	.LBE10:
 192              	.LBE13:
  51:src/memoryAllocator.cpp ****     }
  52:src/memoryAllocator.cpp ****     return nullptr;
  53:src/memoryAllocator.cpp **** }
GAS LISTING /tmp/ccW5sVml.s 			page 6


 193              		.loc 1 53 1
 194 00f8 13850400 		mv	a0,s1
 195 00fc 83308102 		ld	ra,40(sp)
 196              		.cfi_remember_state
 197              		.cfi_restore 1
 198 0100 03340102 		ld	s0,32(sp)
 199              		.cfi_restore 8
 200              		.cfi_def_cfa 2, 48
 201 0104 83348101 		ld	s1,24(sp)
 202              		.cfi_restore 9
 203 0108 03390101 		ld	s2,16(sp)
 204              		.cfi_restore 18
 205 010c 83398100 		ld	s3,8(sp)
 206              		.cfi_restore 19
 207 0110 033A0100 		ld	s4,0(sp)
 208              		.cfi_restore 20
 209 0114 13010103 		addi	sp,sp,48
 210              		.cfi_def_cfa_offset 0
 211 0118 67800000 		jr	ra
 212              	.LVL19:
 213              	.L8:
 214              		.cfi_restore_state
 215              	.LBB14:
 216              	.LBB11:
 217              	.LBB9:
  45:src/memoryAllocator.cpp **** 
 218              		.loc 1 45 17 is_stmt 1
  45:src/memoryAllocator.cpp **** 
 219              		.loc 1 45 30 is_stmt 0
 220 011c 83B70400 		ld	a5,0(s1)
  45:src/memoryAllocator.cpp **** 
 221              		.loc 1 45 22
 222 0120 17070000 		sd	a5,.LANCHOR0,a4
 222      2330F700 
 223 0128 6FF0DFFC 		j	.L9
 224              	.LVL20:
 225              	.L11:
 226              	.LBE9:
 227              	.LBE11:
 228              	.LBE14:
  13:src/memoryAllocator.cpp **** 
 229              		.loc 1 13 16
 230 012c 93040000 		li	s1,0
 231 0130 6FF09FFC 		j	.L3
 232              		.cfi_endproc
 233              	.LFE1:
 235              		.align	2
 236              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 238              	_ZN15MemoryAllocator8mem_freeEPv:
 239              	.LFB2:
  54:src/memoryAllocator.cpp **** 
  55:src/memoryAllocator.cpp **** int MemoryAllocator::mem_free(void *ptr) {
 240              		.loc 1 55 42 is_stmt 1
 241              		.cfi_startproc
 242              	.LVL21:
 243 0134 130101FF 		addi	sp,sp,-16
 244              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccW5sVml.s 			page 7


 245 0138 23348100 		sd	s0,8(sp)
 246              		.cfi_offset 8, -8
 247 013c 13040101 		addi	s0,sp,16
 248              		.cfi_def_cfa 8, 0
  56:src/memoryAllocator.cpp ****     if(ptr == nullptr)
 249              		.loc 1 56 5
 250 0140 630A050A 		beqz	a0,.L22
  57:src/memoryAllocator.cpp ****         return -1;
  58:src/memoryAllocator.cpp **** 
  59:src/memoryAllocator.cpp ****     FreeMemBlock *block = (FreeMemBlock*) ((char*) ptr -sizeof(FreeMemBlock));
 251              		.loc 1 59 5
 252              		.loc 1 59 19 is_stmt 0
 253 0144 930605FF 		addi	a3,a0,-16
 254              	.LVL22:
  60:src/memoryAllocator.cpp ****     FreeMemBlock* curr = head, *prev = nullptr;
 255              		.loc 1 60 5 is_stmt 1
 256              		.loc 1 60 19 is_stmt 0
 257 0148 97070000 		ld	a5,.LANCHOR0
 257      83B70700 
 258              	.LVL23:
 259              		.loc 1 60 33
 260 0150 13070000 		li	a4,0
 261              	.LVL24:
 262              	.L18:
  61:src/memoryAllocator.cpp **** 
  62:src/memoryAllocator.cpp ****     while(curr && curr < block){
 263              		.loc 1 62 5 is_stmt 1
 264              		.loc 1 62 16
 265 0154 638A0700 		beqz	a5,.L17
 266              		.loc 1 62 16 is_stmt 0 discriminator 1
 267 0158 63F8D700 		bgeu	a5,a3,.L17
  63:src/memoryAllocator.cpp ****         prev = curr;
 268              		.loc 1 63 9 is_stmt 1
 269              	.LVL25:
  64:src/memoryAllocator.cpp ****         curr = curr->next;
 270              		.loc 1 64 9
  63:src/memoryAllocator.cpp ****         prev = curr;
 271              		.loc 1 63 14 is_stmt 0
 272 015c 13870700 		mv	a4,a5
 273              		.loc 1 64 14
 274 0160 83B70700 		ld	a5,0(a5)
 275              	.LVL26:
  62:src/memoryAllocator.cpp ****         prev = curr;
 276              		.loc 1 62 5
 277 0164 6FF01FFF 		j	.L18
 278              	.L17:
  65:src/memoryAllocator.cpp ****     }
  66:src/memoryAllocator.cpp ****     if(prev == nullptr)
 279              		.loc 1 66 5 is_stmt 1
 280 0168 63060704 		beqz	a4,.L27
  67:src/memoryAllocator.cpp ****         head = block;
  68:src/memoryAllocator.cpp ****     else
  69:src/memoryAllocator.cpp ****         prev->next = block;
 281              		.loc 1 69 9
 282              		.loc 1 69 20 is_stmt 0
 283 016c 2330D700 		sd	a3,0(a4)
 284              	.L20:
GAS LISTING /tmp/ccW5sVml.s 			page 8


  70:src/memoryAllocator.cpp **** 
  71:src/memoryAllocator.cpp ****     block->next = curr;
 285              		.loc 1 71 5 is_stmt 1
 286              		.loc 1 71 17 is_stmt 0
 287 0170 2338F5FE 		sd	a5,-16(a0)
  72:src/memoryAllocator.cpp ****     if(block->next && (char*)block + block->size * MEM_BLOCK_SIZE == (char*) block->next){
 288              		.loc 1 72 5 is_stmt 1
 289 0174 638A0700 		beqz	a5,.L21
 290              		.loc 1 72 45 is_stmt 0 discriminator 1
 291 0178 033685FF 		ld	a2,-8(a0)
 292              		.loc 1 72 50 discriminator 1
 293 017c 93156600 		slli	a1,a2,6
 294              		.loc 1 72 36 discriminator 1
 295 0180 B386B600 		add	a3,a3,a1
 296              	.LVL27:
 297              		.loc 1 72 20 discriminator 1
 298 0184 638EF602 		beq	a3,a5,.L28
 299              	.LVL28:
 300              	.L21:
  73:src/memoryAllocator.cpp ****         block->size += block->next->size;
  74:src/memoryAllocator.cpp ****         block->next = block->next->next;
  75:src/memoryAllocator.cpp ****     }
  76:src/memoryAllocator.cpp **** 
  77:src/memoryAllocator.cpp ****     if(prev){
 301              		.loc 1 77 5 is_stmt 1
 302 0188 630A0706 		beqz	a4,.L23
  78:src/memoryAllocator.cpp ****         if(prev->next && (char*)prev + prev->size * MEM_BLOCK_SIZE == (char*)prev->next){
 303              		.loc 1 78 9
 304              		.loc 1 78 18 is_stmt 0
 305 018c 83370700 		ld	a5,0(a4)
 306              		.loc 1 78 9
 307 0190 638A0706 		beqz	a5,.L24
 308              		.loc 1 78 46 discriminator 1
 309 0194 03368700 		ld	a2,8(a4)
 310              		.loc 1 78 51 discriminator 1
 311 0198 93166600 		slli	a3,a2,6
 312              		.loc 1 78 38 discriminator 1
 313 019c B306D700 		add	a3,a4,a3
 314              		.loc 1 78 23 discriminator 1
 315 01a0 638CD702 		beq	a5,a3,.L29
  79:src/memoryAllocator.cpp ****             prev->size += prev->next->size;
  80:src/memoryAllocator.cpp ****             prev->next = prev->next->next;
  81:src/memoryAllocator.cpp ****         }
  82:src/memoryAllocator.cpp ****     }
  83:src/memoryAllocator.cpp **** 
  84:src/memoryAllocator.cpp ****     return 0;
 316              		.loc 1 84 12
 317 01a4 13050000 		li	a0,0
 318              	.LVL29:
 319              	.L16:
  85:src/memoryAllocator.cpp **** 
  86:src/memoryAllocator.cpp **** }
 320              		.loc 1 86 1
 321 01a8 03348100 		ld	s0,8(sp)
 322              		.cfi_remember_state
 323              		.cfi_restore 8
 324              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccW5sVml.s 			page 9


 325 01ac 13010101 		addi	sp,sp,16
 326              		.cfi_def_cfa_offset 0
 327 01b0 67800000 		jr	ra
 328              	.LVL30:
 329              	.L27:
 330              		.cfi_restore_state
  67:src/memoryAllocator.cpp ****     else
 331              		.loc 1 67 9 is_stmt 1
  67:src/memoryAllocator.cpp ****     else
 332              		.loc 1 67 14 is_stmt 0
 333 01b4 17060000 		sd	a3,.LANCHOR0,a2
 333      2330D600 
 334 01bc 6FF05FFB 		j	.L20
 335              	.LVL31:
 336              	.L28:
  73:src/memoryAllocator.cpp ****         block->next = block->next->next;
 337              		.loc 1 73 9 is_stmt 1
  73:src/memoryAllocator.cpp ****         block->next = block->next->next;
 338              		.loc 1 73 37 is_stmt 0
 339 01c0 83B68700 		ld	a3,8(a5)
  73:src/memoryAllocator.cpp ****         block->next = block->next->next;
 340              		.loc 1 73 21
 341 01c4 3306D600 		add	a2,a2,a3
 342 01c8 233CC5FE 		sd	a2,-8(a0)
  74:src/memoryAllocator.cpp ****     }
 343              		.loc 1 74 9 is_stmt 1
  74:src/memoryAllocator.cpp ****     }
 344              		.loc 1 74 36 is_stmt 0
 345 01cc 83B70700 		ld	a5,0(a5)
 346              	.LVL32:
  74:src/memoryAllocator.cpp ****     }
 347              		.loc 1 74 21
 348 01d0 2338F5FE 		sd	a5,-16(a0)
 349              	.LVL33:
 350 01d4 6FF05FFB 		j	.L21
 351              	.L29:
  79:src/memoryAllocator.cpp ****             prev->next = prev->next->next;
 352              		.loc 1 79 13 is_stmt 1
  79:src/memoryAllocator.cpp ****             prev->next = prev->next->next;
 353              		.loc 1 79 39 is_stmt 0
 354 01d8 83B68700 		ld	a3,8(a5)
  79:src/memoryAllocator.cpp ****             prev->next = prev->next->next;
 355              		.loc 1 79 24
 356 01dc 3306D600 		add	a2,a2,a3
 357 01e0 2334C700 		sd	a2,8(a4)
  80:src/memoryAllocator.cpp ****         }
 358              		.loc 1 80 13 is_stmt 1
  80:src/memoryAllocator.cpp ****         }
 359              		.loc 1 80 38 is_stmt 0
 360 01e4 83B70700 		ld	a5,0(a5)
  80:src/memoryAllocator.cpp ****         }
 361              		.loc 1 80 24
 362 01e8 2330F700 		sd	a5,0(a4)
  84:src/memoryAllocator.cpp **** 
 363              		.loc 1 84 12
 364 01ec 13050000 		li	a0,0
 365              	.LVL34:
GAS LISTING /tmp/ccW5sVml.s 			page 10


 366 01f0 6FF09FFB 		j	.L16
 367              	.LVL35:
 368              	.L22:
  57:src/memoryAllocator.cpp **** 
 369              		.loc 1 57 17
 370 01f4 1305F0FF 		li	a0,-1
 371              	.LVL36:
 372 01f8 6FF01FFB 		j	.L16
 373              	.LVL37:
 374              	.L23:
  84:src/memoryAllocator.cpp **** 
 375              		.loc 1 84 12
 376 01fc 13050000 		li	a0,0
 377              	.LVL38:
 378 0200 6FF09FFA 		j	.L16
 379              	.LVL39:
 380              	.L24:
 381 0204 13050000 		li	a0,0
 382              	.LVL40:
 383 0208 6FF01FFA 		j	.L16
 384              		.cfi_endproc
 385              	.LFE2:
 387              		.globl	_ZN15MemoryAllocator4headE
 388              		.bss
 389              		.align	3
 390              		.set	.LANCHOR0,. + 0
 393              	_ZN15MemoryAllocator4headE:
 394 0000 00000000 		.zero	8
 394      00000000 
 395              		.text
 396              	.Letext0:
 397              		.file 2 "src/../h/../lib/hw.h"
 398              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccW5sVml.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memoryAllocator.cpp
     /tmp/ccW5sVml.s:8      .text:0000000000000000 _ZL12blocksNeededm
     /tmp/ccW5sVml.s:12     .text:0000000000000000 .L0 
     /tmp/ccW5sVml.s:14     .text:0000000000000000 .L0 
     /tmp/ccW5sVml.s:15     .text:0000000000000004 .L0 
     /tmp/ccW5sVml.s:17     .text:0000000000000008 .L0 
     /tmp/ccW5sVml.s:19     .text:000000000000000c .L0 
     /tmp/ccW5sVml.s:21     .text:000000000000000c .L0 
     /tmp/ccW5sVml.s:22     .text:000000000000000c .L0 
     /tmp/ccW5sVml.s:25     .text:0000000000000010 .L0 
     /tmp/ccW5sVml.s:28     .text:0000000000000018 .L0 
     /tmp/ccW5sVml.s:29     .text:0000000000000018 .L0 
     /tmp/ccW5sVml.s:31     .text:000000000000001c .L0 
     /tmp/ccW5sVml.s:33     .text:0000000000000020 .L0 
     /tmp/ccW5sVml.s:39     .text:0000000000000020 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccW5sVml.s:42     .text:0000000000000020 .L0 
     /tmp/ccW5sVml.s:44     .text:0000000000000020 .L0 
     /tmp/ccW5sVml.s:45     .text:0000000000000024 .L0 
     /tmp/ccW5sVml.s:52     .text:000000000000003c .L0 
     /tmp/ccW5sVml.s:53     .text:000000000000003c .L0 
     /tmp/ccW5sVml.s:54     .text:000000000000003c .L0 
     /tmp/ccW5sVml.s:55     .text:000000000000003c .L0 
     /tmp/ccW5sVml.s:56     .text:000000000000003c .L0 
     /tmp/ccW5sVml.s:57     .text:000000000000003c .L0 
     /tmp/ccW5sVml.s:59     .text:0000000000000040 .L0 
     /tmp/ccW5sVml.s:61     .text:0000000000000040 .L0 
     /tmp/ccW5sVml.s:63     .text:0000000000000044 .L0 
     /tmp/ccW5sVml.s:64     .text:0000000000000044 .L0 
     /tmp/ccW5sVml.s:69     .text:0000000000000050 .L0 
     /tmp/ccW5sVml.s:70     .text:0000000000000050 .L0 
     /tmp/ccW5sVml.s:74     .text:0000000000000058 .L0 
     /tmp/ccW5sVml.s:78     .text:000000000000005c .L0 
     /tmp/ccW5sVml.s:82     .text:0000000000000060 .L0 
     /tmp/ccW5sVml.s:83     .text:0000000000000060 .L0 
     /tmp/ccW5sVml.s:87     .text:0000000000000064 .L0 
     /tmp/ccW5sVml.s:88     .text:0000000000000064 .L0 
     /tmp/ccW5sVml.s:90     .text:0000000000000068 .L0 
     /tmp/ccW5sVml.s:94     .text:000000000000006c .L0 
     /tmp/ccW5sVml.s:95     .text:000000000000006c .L0 
     /tmp/ccW5sVml.s:96     .text:000000000000006c .L0 
     /tmp/ccW5sVml.s:98     .text:0000000000000070 .L0 
     /tmp/ccW5sVml.s:102    .text:0000000000000074 .L0 
     /tmp/ccW5sVml.s:108    .text:0000000000000078 .L0 
     /tmp/ccW5sVml.s:109    .text:0000000000000078 .L0 
     /tmp/ccW5sVml.s:115    .text:0000000000000094 .L0 
     /tmp/ccW5sVml.s:118    .text:0000000000000098 .L0 
     /tmp/ccW5sVml.s:120    .text:000000000000009c .L0 
     /tmp/ccW5sVml.s:121    .text:000000000000009c .L0 
     /tmp/ccW5sVml.s:124    .text:00000000000000a8 .L0 
     /tmp/ccW5sVml.s:125    .text:00000000000000a8 .L0 
     /tmp/ccW5sVml.s:127    .text:00000000000000ac .L0 
     /tmp/ccW5sVml.s:128    .text:00000000000000ac .L0 
     /tmp/ccW5sVml.s:130    .text:00000000000000b0 .L0 
     /tmp/ccW5sVml.s:140    .text:00000000000000b8 .L0 
     /tmp/ccW5sVml.s:141    .text:00000000000000b8 .L0 
     /tmp/ccW5sVml.s:145    .text:00000000000000bc .L0 
GAS LISTING /tmp/ccW5sVml.s 			page 12


     /tmp/ccW5sVml.s:146    .text:00000000000000bc .L0 
     /tmp/ccW5sVml.s:151    .text:00000000000000c8 .L0 
     /tmp/ccW5sVml.s:154    .text:00000000000000cc .L0 
     /tmp/ccW5sVml.s:155    .text:00000000000000cc .L0 
     /tmp/ccW5sVml.s:157    .text:00000000000000d0 .L0 
     /tmp/ccW5sVml.s:160    .text:00000000000000d4 .L0 
     /tmp/ccW5sVml.s:161    .text:00000000000000d4 .L0 
     /tmp/ccW5sVml.s:163    .text:00000000000000d8 .L0 
     /tmp/ccW5sVml.s:164    .text:00000000000000d8 .L0 
     /tmp/ccW5sVml.s:166    .text:00000000000000dc .L0 
     /tmp/ccW5sVml.s:168    .text:00000000000000e0 .L0 
     /tmp/ccW5sVml.s:169    .text:00000000000000e0 .L0 
     /tmp/ccW5sVml.s:171    .text:00000000000000e4 .L0 
     /tmp/ccW5sVml.s:172    .text:00000000000000e4 .L0 
     /tmp/ccW5sVml.s:178    .text:00000000000000e8 .L0 
     /tmp/ccW5sVml.s:180    .text:00000000000000ec .L0 
     /tmp/ccW5sVml.s:181    .text:00000000000000ec .L0 
     /tmp/ccW5sVml.s:183    .text:00000000000000f0 .L0 
     /tmp/ccW5sVml.s:186    .text:00000000000000f4 .L0 
     /tmp/ccW5sVml.s:187    .text:00000000000000f4 .L0 
     /tmp/ccW5sVml.s:194    .text:00000000000000f8 .L0 
     /tmp/ccW5sVml.s:196    .text:0000000000000100 .L0 
     /tmp/ccW5sVml.s:197    .text:0000000000000100 .L0 
     /tmp/ccW5sVml.s:199    .text:0000000000000104 .L0 
     /tmp/ccW5sVml.s:200    .text:0000000000000104 .L0 
     /tmp/ccW5sVml.s:202    .text:0000000000000108 .L0 
     /tmp/ccW5sVml.s:204    .text:000000000000010c .L0 
     /tmp/ccW5sVml.s:206    .text:0000000000000110 .L0 
     /tmp/ccW5sVml.s:208    .text:0000000000000114 .L0 
     /tmp/ccW5sVml.s:210    .text:0000000000000118 .L0 
     /tmp/ccW5sVml.s:214    .text:000000000000011c .L0 
     /tmp/ccW5sVml.s:219    .text:000000000000011c .L0 
     /tmp/ccW5sVml.s:220    .text:000000000000011c .L0 
     /tmp/ccW5sVml.s:222    .text:0000000000000120 .L0 
     /tmp/ccW5sVml.s:230    .text:000000000000012c .L0 
     /tmp/ccW5sVml.s:232    .text:0000000000000134 .L0 
     /tmp/ccW5sVml.s:238    .text:0000000000000134 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccW5sVml.s:241    .text:0000000000000134 .L0 
     /tmp/ccW5sVml.s:243    .text:0000000000000134 .L0 
     /tmp/ccW5sVml.s:244    .text:0000000000000138 .L0 
     /tmp/ccW5sVml.s:246    .text:000000000000013c .L0 
     /tmp/ccW5sVml.s:248    .text:0000000000000140 .L0 
     /tmp/ccW5sVml.s:250    .text:0000000000000140 .L0 
     /tmp/ccW5sVml.s:252    .text:0000000000000144 .L0 
     /tmp/ccW5sVml.s:253    .text:0000000000000144 .L0 
     /tmp/ccW5sVml.s:256    .text:0000000000000148 .L0 
     /tmp/ccW5sVml.s:257    .text:0000000000000148 .L0 
     /tmp/ccW5sVml.s:260    .text:0000000000000150 .L0 
     /tmp/ccW5sVml.s:264    .text:0000000000000154 .L0 
     /tmp/ccW5sVml.s:265    .text:0000000000000154 .L0 
     /tmp/ccW5sVml.s:267    .text:0000000000000158 .L0 
     /tmp/ccW5sVml.s:270    .text:000000000000015c .L0 
     /tmp/ccW5sVml.s:271    .text:000000000000015c .L0 
     /tmp/ccW5sVml.s:272    .text:000000000000015c .L0 
     /tmp/ccW5sVml.s:274    .text:0000000000000160 .L0 
     /tmp/ccW5sVml.s:277    .text:0000000000000164 .L0 
     /tmp/ccW5sVml.s:280    .text:0000000000000168 .L0 
GAS LISTING /tmp/ccW5sVml.s 			page 13


     /tmp/ccW5sVml.s:282    .text:000000000000016c .L0 
     /tmp/ccW5sVml.s:283    .text:000000000000016c .L0 
     /tmp/ccW5sVml.s:286    .text:0000000000000170 .L0 
     /tmp/ccW5sVml.s:287    .text:0000000000000170 .L0 
     /tmp/ccW5sVml.s:289    .text:0000000000000174 .L0 
     /tmp/ccW5sVml.s:291    .text:0000000000000178 .L0 
     /tmp/ccW5sVml.s:293    .text:000000000000017c .L0 
     /tmp/ccW5sVml.s:295    .text:0000000000000180 .L0 
     /tmp/ccW5sVml.s:298    .text:0000000000000184 .L0 
     /tmp/ccW5sVml.s:302    .text:0000000000000188 .L0 
     /tmp/ccW5sVml.s:304    .text:000000000000018c .L0 
     /tmp/ccW5sVml.s:305    .text:000000000000018c .L0 
     /tmp/ccW5sVml.s:307    .text:0000000000000190 .L0 
     /tmp/ccW5sVml.s:309    .text:0000000000000194 .L0 
     /tmp/ccW5sVml.s:311    .text:0000000000000198 .L0 
     /tmp/ccW5sVml.s:313    .text:000000000000019c .L0 
     /tmp/ccW5sVml.s:315    .text:00000000000001a0 .L0 
     /tmp/ccW5sVml.s:317    .text:00000000000001a4 .L0 
     /tmp/ccW5sVml.s:321    .text:00000000000001a8 .L0 
     /tmp/ccW5sVml.s:322    .text:00000000000001ac .L0 
     /tmp/ccW5sVml.s:323    .text:00000000000001ac .L0 
     /tmp/ccW5sVml.s:324    .text:00000000000001ac .L0 
     /tmp/ccW5sVml.s:326    .text:00000000000001b0 .L0 
     /tmp/ccW5sVml.s:330    .text:00000000000001b4 .L0 
     /tmp/ccW5sVml.s:332    .text:00000000000001b4 .L0 
     /tmp/ccW5sVml.s:333    .text:00000000000001b4 .L0 
     /tmp/ccW5sVml.s:338    .text:00000000000001c0 .L0 
     /tmp/ccW5sVml.s:339    .text:00000000000001c0 .L0 
     /tmp/ccW5sVml.s:341    .text:00000000000001c4 .L0 
     /tmp/ccW5sVml.s:344    .text:00000000000001cc .L0 
     /tmp/ccW5sVml.s:345    .text:00000000000001cc .L0 
     /tmp/ccW5sVml.s:348    .text:00000000000001d0 .L0 
     /tmp/ccW5sVml.s:353    .text:00000000000001d8 .L0 
     /tmp/ccW5sVml.s:354    .text:00000000000001d8 .L0 
     /tmp/ccW5sVml.s:356    .text:00000000000001dc .L0 
     /tmp/ccW5sVml.s:359    .text:00000000000001e4 .L0 
     /tmp/ccW5sVml.s:360    .text:00000000000001e4 .L0 
     /tmp/ccW5sVml.s:362    .text:00000000000001e8 .L0 
     /tmp/ccW5sVml.s:364    .text:00000000000001ec .L0 
     /tmp/ccW5sVml.s:370    .text:00000000000001f4 .L0 
     /tmp/ccW5sVml.s:376    .text:00000000000001fc .L0 
     /tmp/ccW5sVml.s:384    .text:000000000000020c .L0 
     /tmp/ccW5sVml.s:393    .bss:0000000000000000 _ZN15MemoryAllocator4headE
     /tmp/ccW5sVml.s:390    .bss:0000000000000000 .LANCHOR0
     /tmp/ccW5sVml.s:399    .text:000000000000020c .L0 
     /tmp/ccW5sVml.s:70     .text:0000000000000050 .L0 
     /tmp/ccW5sVml.s:109    .text:0000000000000078 .L0 
     /tmp/ccW5sVml.s:111    .text:0000000000000084 .L0 
     /tmp/ccW5sVml.s:121    .text:000000000000009c .L0 
     /tmp/ccW5sVml.s:222    .text:0000000000000120 .L0 
     /tmp/ccW5sVml.s:257    .text:0000000000000148 .L0 
     /tmp/ccW5sVml.s:333    .text:00000000000001b4 .L0 
     /tmp/ccW5sVml.s:225    .text:000000000000012c .L11
     /tmp/ccW5sVml.s:104    .text:0000000000000078 .L13
     /tmp/ccW5sVml.s:189    .text:00000000000000f8 .L3
     /tmp/ccW5sVml.s:134    .text:00000000000000b8 .L14
     /tmp/ccW5sVml.s:80     .text:0000000000000060 .L10
GAS LISTING /tmp/ccW5sVml.s 			page 14


     /tmp/ccW5sVml.s:75     .text:000000000000005c .L5
     /tmp/ccW5sVml.s:174    .text:00000000000000e8 .L7
     /tmp/ccW5sVml.s:213    .text:000000000000011c .L8
     /tmp/ccW5sVml.s:184    .text:00000000000000f4 .L9
     /tmp/ccW5sVml.s:368    .text:00000000000001f4 .L22
     /tmp/ccW5sVml.s:278    .text:0000000000000168 .L17
     /tmp/ccW5sVml.s:262    .text:0000000000000154 .L18
     /tmp/ccW5sVml.s:329    .text:00000000000001b4 .L27
     /tmp/ccW5sVml.s:300    .text:0000000000000188 .L21
     /tmp/ccW5sVml.s:336    .text:00000000000001c0 .L28
     /tmp/ccW5sVml.s:374    .text:00000000000001fc .L23
     /tmp/ccW5sVml.s:380    .text:0000000000000204 .L24
     /tmp/ccW5sVml.s:351    .text:00000000000001d8 .L29
     /tmp/ccW5sVml.s:284    .text:0000000000000170 .L20
     /tmp/ccW5sVml.s:319    .text:00000000000001a8 .L16
     /tmp/ccW5sVml.s:767    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccW5sVml.s:1583   .debug_str:000000000000004f .LASF30
     /tmp/ccW5sVml.s:1611   .debug_str:00000000000001d9 .LASF31
     /tmp/ccW5sVml.s:1625   .debug_str:000000000000023f .LASF32
     /tmp/ccW5sVml.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccW5sVml.s:396    .text:000000000000020c .Letext0
     /tmp/ccW5sVml.s:1569   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccW5sVml.s:1617   .debug_str:000000000000020f .LASF0
     /tmp/ccW5sVml.s:1607   .debug_str:00000000000001ba .LASF1
     /tmp/ccW5sVml.s:1601   .debug_str:0000000000000191 .LASF2
     /tmp/ccW5sVml.s:1587   .debug_str:0000000000000121 .LASF4
     /tmp/ccW5sVml.s:1605   .debug_str:00000000000001a8 .LASF3
     /tmp/ccW5sVml.s:1575   .debug_str:0000000000000023 .LASF5
     /tmp/ccW5sVml.s:1571   .debug_str:0000000000000000 .LASF6
     /tmp/ccW5sVml.s:1593   .debug_str:0000000000000148 .LASF7
     /tmp/ccW5sVml.s:1627   .debug_str:0000000000000258 .LASF8
     /tmp/ccW5sVml.s:1585   .debug_str:0000000000000113 .LASF9
     /tmp/ccW5sVml.s:1647   .debug_str:00000000000002e3 .LASF10
     /tmp/ccW5sVml.s:1597   .debug_str:0000000000000161 .LASF11
     /tmp/ccW5sVml.s:1639   .debug_str:00000000000002bf .LASF12
     /tmp/ccW5sVml.s:1631   .debug_str:000000000000027e .LASF13
     /tmp/ccW5sVml.s:1609   .debug_str:00000000000001cd .LASF14
     /tmp/ccW5sVml.s:1591   .debug_str:0000000000000132 .LASF15
     /tmp/ccW5sVml.s:1629   .debug_str:0000000000000268 .LASF16
     /tmp/ccW5sVml.s:1621   .debug_str:0000000000000229 .LASF33
     /tmp/ccW5sVml.s:1577   .debug_str:000000000000002a .LASF17
     /tmp/ccW5sVml.s:1643   .debug_str:00000000000002d9 .LASF18
     /tmp/ccW5sVml.s:1573   .debug_str:0000000000000013 .LASF19
     /tmp/ccW5sVml.s:1615   .debug_str:000000000000020a .LASF34
     /tmp/ccW5sVml.s:1613   .debug_str:00000000000001f1 .LASF21
     /tmp/ccW5sVml.s:1641   .debug_str:00000000000002cf .LASF20
     /tmp/ccW5sVml.s:1637   .debug_str:000000000000029e .LASF22
     /tmp/ccW5sVml.s:1633   .debug_str:000000000000028e .LASF35
     /tmp/ccW5sVml.s:1599   .debug_str:0000000000000170 .LASF36
     /tmp/ccW5sVml.s:1579   .debug_str:000000000000002f .LASF37
     /tmp/ccW5sVml.s:239    .text:0000000000000134 .LFB2
     /tmp/ccW5sVml.s:385    .text:000000000000020c .LFE2
     /tmp/ccW5sVml.s:1244   .debug_loc:0000000000000000 .LLST8
     /tmp/ccW5sVml.s:1595   .debug_str:000000000000015b .LASF23
     /tmp/ccW5sVml.s:1302   .debug_loc:00000000000000dd .LLST9
     /tmp/ccW5sVml.s:1581   .debug_str:000000000000004a .LASF24
     /tmp/ccW5sVml.s:1364   .debug_loc:00000000000001af .LLST10
GAS LISTING /tmp/ccW5sVml.s 			page 15


     /tmp/ccW5sVml.s:1645   .debug_str:00000000000002de .LASF25
     /tmp/ccW5sVml.s:1389   .debug_loc:0000000000000220 .LLST11
     /tmp/ccW5sVml.s:40     .text:0000000000000020 .LFB1
     /tmp/ccW5sVml.s:233    .text:0000000000000134 .LFE1
     /tmp/ccW5sVml.s:1417   .debug_loc:00000000000002a3 .LLST1
     /tmp/ccW5sVml.s:1635   .debug_str:0000000000000297 .LASF26
     /tmp/ccW5sVml.s:1435   .debug_loc:00000000000002ef .LLST2
     /tmp/ccW5sVml.s:1450   .debug_loc:0000000000000338 .LLST3
     /tmp/ccW5sVml.s:1470   .debug_loc:0000000000000395 .LLST4
     /tmp/ccW5sVml.s:106    .text:0000000000000078 .LBB3
     /tmp/ccW5sVml.s:131    .text:00000000000000b4 .LBE3
     /tmp/ccW5sVml.s:1603   .debug_str:000000000000019f .LASF27
     /tmp/ccW5sVml.s:1503   .debug_loc:000000000000042c .LLST5
     /tmp/ccW5sVml.s:1561   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccW5sVml.s:1589   .debug_str:0000000000000128 .LASF28
     /tmp/ccW5sVml.s:1510   .debug_loc:000000000000044f .LLST6
     /tmp/ccW5sVml.s:152    .text:00000000000000cc .LBB8
     /tmp/ccW5sVml.s:175    .text:00000000000000e8 .LBE8
     /tmp/ccW5sVml.s:1623   .debug_str:0000000000000236 .LASF29
     /tmp/ccW5sVml.s:1521   .debug_loc:0000000000000485 .LLST7
     /tmp/ccW5sVml.s:149    .text:00000000000000c8 .LVL15
     /tmp/ccW5sVml.s:65     .text:000000000000004c .LVL4
     /tmp/ccW5sVml.s:1619   .debug_str:000000000000021c .LASF38
     /tmp/ccW5sVml.s:9      .text:0000000000000000 .LFB0
     /tmp/ccW5sVml.s:34     .text:0000000000000020 .LFE0
     /tmp/ccW5sVml.s:1528   .debug_loc:00000000000004a8 .LLST0
     /tmp/ccW5sVml.s:242    .text:0000000000000134 .LVL21
     /tmp/ccW5sVml.s:318    .text:00000000000001a8 .LVL29
     /tmp/ccW5sVml.s:328    .text:00000000000001b4 .LVL30
     /tmp/ccW5sVml.s:365    .text:00000000000001f0 .LVL34
     /tmp/ccW5sVml.s:367    .text:00000000000001f4 .LVL35
     /tmp/ccW5sVml.s:371    .text:00000000000001f8 .LVL36
     /tmp/ccW5sVml.s:373    .text:00000000000001fc .LVL37
     /tmp/ccW5sVml.s:377    .text:0000000000000200 .LVL38
     /tmp/ccW5sVml.s:379    .text:0000000000000204 .LVL39
     /tmp/ccW5sVml.s:382    .text:0000000000000208 .LVL40
     /tmp/ccW5sVml.s:254    .text:0000000000000148 .LVL22
     /tmp/ccW5sVml.s:296    .text:0000000000000184 .LVL27
     /tmp/ccW5sVml.s:335    .text:00000000000001c0 .LVL31
     /tmp/ccW5sVml.s:258    .text:0000000000000150 .LVL23
     /tmp/ccW5sVml.s:269    .text:000000000000015c .LVL25
     /tmp/ccW5sVml.s:275    .text:0000000000000164 .LVL26
     /tmp/ccW5sVml.s:299    .text:0000000000000188 .LVL28
     /tmp/ccW5sVml.s:346    .text:00000000000001d0 .LVL32
     /tmp/ccW5sVml.s:349    .text:00000000000001d4 .LVL33
     /tmp/ccW5sVml.s:261    .text:0000000000000154 .LVL24
     /tmp/ccW5sVml.s:43     .text:0000000000000020 .LVL3
     /tmp/ccW5sVml.s:224    .text:000000000000012c .LVL20
     /tmp/ccW5sVml.s:67     .text:0000000000000050 .LVL5
     /tmp/ccW5sVml.s:147    .text:00000000000000c0 .LVL14
     /tmp/ccW5sVml.s:188    .text:00000000000000f8 .LVL18
     /tmp/ccW5sVml.s:212    .text:000000000000011c .LVL19
     /tmp/ccW5sVml.s:71     .text:0000000000000058 .LVL6
     /tmp/ccW5sVml.s:93     .text:000000000000006c .LVL8
     /tmp/ccW5sVml.s:99     .text:0000000000000074 .LVL9
     /tmp/ccW5sVml.s:79     .text:0000000000000060 .LVL7
     /tmp/ccW5sVml.s:103    .text:0000000000000078 .LVL10
GAS LISTING /tmp/ccW5sVml.s 			page 16


     /tmp/ccW5sVml.s:133    .text:00000000000000b8 .LVL12
     /tmp/ccW5sVml.s:116    .text:0000000000000098 .LVL11
     /tmp/ccW5sVml.s:142    .text:00000000000000bc .LVL13
     /tmp/ccW5sVml.s:158    .text:00000000000000d4 .LVL16
     /tmp/ccW5sVml.s:173    .text:00000000000000e8 .LVL17
     /tmp/ccW5sVml.s:13     .text:0000000000000000 .LVL0
     /tmp/ccW5sVml.s:23     .text:0000000000000010 .LVL1
     /tmp/ccW5sVml.s:26     .text:0000000000000014 .LVL2
     /tmp/ccW5sVml.s:400    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccW5sVml.s:138    .text:00000000000000b8 .LBB6
     /tmp/ccW5sVml.s:190    .text:00000000000000f8 .LBE6
     /tmp/ccW5sVml.s:217    .text:000000000000011c .LBB9
     /tmp/ccW5sVml.s:226    .text:000000000000012c .LBE9

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
